@page "/parents"
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using Pschool.Application.DTOs
@using System.Net.Http.Json
@using Pschool.Shared.Results
@inject HttpClient HttpClient
@inject NavigationManager NavigationPage
@rendermode InteractiveServer

<h3>Parents</h3>
<button @onclick="AddParent">Add Parent</button>
<table class="table">
    <thead>
        <tr>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Email</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var parent in Parents)
        {
            <tr>
                <td>@parent.Name</td>
                <td>@parent.Surname</td>
                <td>@parent.Email</td>
                <td>
                    <button @onclick="() => EditParent(parent.Id)">Edit</button>
                    <button @onclick="() => DeleteParent(parent.Id)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<ParentDto> Parents = new List<ParentDto>();
    [Inject] private HttpClient Http { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        var parentsResult = await HttpClient.GetFromJsonAsync<Result<List<ParentDto>>>("api/parents");
        if (parentsResult != null)
            Parents = parentsResult.Data;
    }


    private void AddParent()
    {
        NavigationPage.NavigateTo("/add-parent");
    }

    private void EditParent(Guid id)
    {
        NavigationPage.NavigateTo($"/edit-parent/{id}");
    }

    private async Task DeleteParent(Guid id)
    {
        var response = await Http.PostAsJsonAsync("/api/delete-parent", id);
        NavigationPage.NavigateTo("/record-deleted/parents");
    }
}
